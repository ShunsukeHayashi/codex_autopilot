version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  orchestrator:
    build:
      context: .
      dockerfile: ./orchestrator/Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - GITHUB_WEBHOOK_SECRET=${GITHUB_WEBHOOK_SECRET}
      - GITHUB_APP_ID=${GITHUB_APP_ID}
      - GITHUB_APP_TOKEN=${GITHUB_APP_TOKEN}
      - GITHUB_PRIVATE_KEY=${GITHUB_PRIVATE_KEY}
      - LINE_CHANNEL_ACCESS_TOKEN=${LINE_CHANNEL_ACCESS_TOKEN}
      - LINE_CHANNEL_SECRET=${LINE_CHANNEL_SECRET}
      - LINE_USER_IDS=${LINE_USER_IDS}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
      - DISCORD_CHANNEL_ID=${DISCORD_CHANNEL_ID}
    ports:
      - "3000:3000"
    depends_on:
      - redis
    restart: unless-stopped

  line-worker:
    build:
      context: .
      dockerfile: ./workers/line/Dockerfile
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - LINE_CHANNEL_ACCESS_TOKEN=${LINE_CHANNEL_ACCESS_TOKEN}
      - LINE_CHANNEL_SECRET=${LINE_CHANNEL_SECRET}
      - LINE_USER_IDS=${LINE_USER_IDS}
    depends_on:
      - redis
      - orchestrator
    restart: unless-stopped

  discord-worker:
    build:
      context: .
      dockerfile: ./workers/discord/Dockerfile
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
      - DISCORD_CHANNEL_ID=${DISCORD_CHANNEL_ID}
    depends_on:
      - redis
      - orchestrator
    restart: unless-stopped

volumes:
  redis-data: