name: Codex Autopilot
on:
  issue_comment:
    types: [created]
  pull_request:
    types: [opened, synchronize]
  pull_request_review:
    types: [submitted]

jobs:
  codex:
    if: >-
      (github.event_name == 'issue_comment' && 
       startsWith(github.event.comment.body, '/codex')) || 
      (github.event_name == 'pull_request' && 
       contains(github.event.pull_request.labels.*.name, 'codex-review')) ||
      (github.event_name == 'pull_request_review' && 
       github.event.review.state == 'approved' && 
       contains(github.event.pull_request.labels.*.name, 'codex'))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      
      - name: Install Codex CLI
        run: npm install -g @openai/codex
      
      - name: Configure Git
        run: |
          git config --global user.name "Codex Autopilot"
          git config --global user.email "codex-bot@example.com"
      
      - name: Run Codex Command
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            # Extract command after /codex
            COMMAND="${{ github.event.comment.body }}"
            COMMAND=${COMMAND#/codex}
            echo "Running command: $COMMAND"
            codex run --auto "$COMMAND"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Reviewing PR with Codex"
            codex run --auto "Review this PR and suggest improvements"
          elif [[ "${{ github.event_name }}" == "pull_request_review" ]]; then
            echo "Processing approved PR with Codex"
            codex run --auto "This PR is approved. Make any final adjustments needed before merging."
          fi
      
      - name: Notify MCP Orchestrator
        if: success()
        run: |
          curl -X POST ${{ secrets.MCP_WEBHOOK_URL }}/github \
            -H "Content-Type: application/json" \
            -d "{\"event\": \"${{ github.event_name }}\", \"action\": \"${{ github.event.action }}\", \"repository\": \"${{ github.repository }}\", \"success\": true}"